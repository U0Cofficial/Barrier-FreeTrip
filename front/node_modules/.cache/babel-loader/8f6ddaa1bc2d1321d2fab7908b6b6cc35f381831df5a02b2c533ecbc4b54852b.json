{"ast":null,"code":"var _jsxFileName = \"/Users/jeong-yuyeong/Documents/GitHub/\\u110C\\u1169\\u11AF\\u110B\\u1165\\u11B8\\u110C\\u1161\\u11A8\\u1111\\u116E\\u11B7/Barrier-FreeTrip/front/src/pages/SignupPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { userState } from \"../atoms/userAtom\";\nimport { useSetRecoilState } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignupPage() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    username: \"\",\n    password: \"\"\n  });\n  const navigate = useNavigate();\n  const setUser = useSetRecoilState(userState);\n  const [message, setMessage] = useState(\"\");\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.name || !formData.username || !formData.password) {\n      setMessage(\"❗ 모든 항목을 입력해주세요.\");\n      return;\n    }\n    try {\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/api/auth/signup`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMessage(`✅ 회원가입 성공! 사용자 ID: ${data.userId}`);\n        setUser({\n          id: data.userId,\n          name: formData.name\n        });\n        localStorage.setItem(\"user\", JSON.stringify({\n          id: data.userId,\n          name: formData.name\n        }));\n        navigate(\"/mainpage\");\n      } else {\n        setMessage(`❌ 오류: ${data.error}`);\n      }\n    } catch (err) {\n      setMessage(\"❌ 서버에 연결할 수 없습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-[700px] mx-auto mt-20 mb-20 p-6 bg-white rounded shadow-md border\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-center\",\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"\\uC774\\uB984\",\n        value: formData.name,\n        onChange: handleChange,\n        required: true,\n        className: \"w-full px-4 py-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"\\uC544\\uC774\\uB514\",\n        value: formData.username,\n        onChange: handleChange,\n        required: true,\n        className: \"w-full px-4 py-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true,\n        className: \"w-full px-4 py-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-green-500 text-white py-2 rounded hover:bg-green-600\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-center text-sm text-gray-700\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(SignupPage, \"PmA6KGhscA5HCEQkv9P278qpy3g=\", false, function () {\n  return [useNavigate, useSetRecoilState];\n});\n_c = SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useState","useNavigate","userState","useSetRecoilState","jsxDEV","_jsxDEV","SignupPage","_s","formData","setFormData","name","username","password","navigate","setUser","message","setMessage","handleChange","e","target","value","handleSubmit","preventDefault","res","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","data","json","ok","userId","id","localStorage","setItem","error","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["/Users/jeong-yuyeong/Documents/GitHub/졸업작품/Barrier-FreeTrip/front/src/pages/SignupPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { userState } from \"../atoms/userAtom\";\nimport { useSetRecoilState } from \"recoil\";\n\nexport default function SignupPage() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    username: \"\",\n    password: \"\",\n  });\n  const navigate = useNavigate();\n  const setUser = useSetRecoilState(userState);\n  const [message, setMessage] = useState(\"\");\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!formData.name || !formData.username || !formData.password) {\n      setMessage(\"❗ 모든 항목을 입력해주세요.\");\n      return;\n    }\n\n    try {\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/api/auth/signup`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formData),\n      });\n\n      const data = await res.json();\n\n      if (res.ok) {\n        setMessage(`✅ 회원가입 성공! 사용자 ID: ${data.userId}`);\n        setUser({ id: data.userId, name: formData.name });\n        localStorage.setItem(\n          \"user\",\n          JSON.stringify({ id: data.userId, name: formData.name })\n        );\n        navigate(\"/mainpage\");\n      } else {\n        setMessage(`❌ 오류: ${data.error}`);\n      }\n    } catch (err) {\n      setMessage(\"❌ 서버에 연결할 수 없습니다.\");\n    }\n  };\n\n  return (\n    <div className=\"max-w-[700px] mx-auto mt-20 mb-20 p-6 bg-white rounded shadow-md border\">\n      <h2 className=\"text-2xl font-bold mb-4 text-center\">회원가입</h2>\n\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"이름\"\n          value={formData.name}\n          onChange={handleChange}\n          required\n          className=\"w-full px-4 py-2 border rounded\"\n        />\n        <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"아이디\"\n          value={formData.username}\n          onChange={handleChange}\n          required\n          className=\"w-full px-4 py-2 border rounded\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"비밀번호\"\n          value={formData.password}\n          onChange={handleChange}\n          required\n          className=\"w-full px-4 py-2 border rounded\"\n        />\n        <button\n          type=\"submit\"\n          className=\"w-full bg-green-500 text-white py-2 rounded hover:bg-green-600\"\n        >\n          회원가입\n        </button>\n      </form>\n\n      {message && (\n        <p className=\"mt-4 text-center text-sm text-gray-700\">{message}</p>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}