{"ast":null,"code":"var _jsxFileName = \"/Users/jeong-yuyeong/Documents/GitHub/\\u110C\\u1169\\u11AF\\u110B\\u1165\\u11B8\\u110C\\u1161\\u11A8\\u1111\\u116E\\u11B7/Barrier-FreeTrip/front/src/pages/LoginPage.jsx\",\n  _s = $RefreshSig$();\n// 로그인 페이지 컴포넌트: 사용자 인증을 처리하고 로그인 후 메인 페이지로 이동\n\nimport React, { useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { useNavigate } from \"react-router-dom\";\nimport { userState } from \"../atoms/userAtom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  // 사용자 입력 상태\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  // 로그인 메시지 상태 (성공/오류)\n  const [message, setMessage] = useState(\"\");\n\n  // 전역 사용자 상태 관리\n  const [user, setUser] = useRecoilState(userState);\n  const navigate = useNavigate();\n\n  // 입력 필드 변경 시 상태 업데이트\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // 로그인 요청 처리\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/api/auth/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await res.json();\n      if (res.ok) {\n        // 로그인 성공 시 사용자 정보 설정 및 로컬 스토리지 저장\n        setUser({\n          id: data.userId,\n          name: data.name\n        });\n        localStorage.setItem(\"user\", JSON.stringify({\n          id: data.userId,\n          name: data.name\n        }));\n        setMessage(\"✅ 로그인 성공!\");\n        // 일정 시간 후 메인 페이지로 이동\n        setTimeout(() => {\n          navigate(\"/mainpage\");\n        }, 1500);\n      } else {\n        // 로그인 실패 시 메시지 출력\n        setMessage(`❌ 오류: ${data.error}`);\n      }\n    } catch (err) {\n      // 서버 연결 실패\n      setMessage(\"❌ 서버에 연결할 수 없습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-[700px] mx-auto mt-20 mb-20 p-6 bg-white rounded shadow-md border\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-center\",\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"\\uC544\\uC774\\uB514\",\n        value: formData.username,\n        onChange: handleChange,\n        required: true,\n        className: \"w-full px-4 py-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true,\n        className: \"w-full px-4 py-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-green-500 text-white py-2 rounded hover:bg-green-600\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-center text-sm text-gray-700\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"gGYD5LW3BbpzQdAHpmKWJJferJM=\", false, function () {\n  return [useRecoilState, useNavigate];\n});\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useRecoilState","useNavigate","userState","jsxDEV","_jsxDEV","LoginPage","_s","formData","setFormData","username","password","message","setMessage","user","setUser","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","res","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","data","json","ok","id","userId","localStorage","setItem","setTimeout","error","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["/Users/jeong-yuyeong/Documents/GitHub/졸업작품/Barrier-FreeTrip/front/src/pages/LoginPage.jsx"],"sourcesContent":["// 로그인 페이지 컴포넌트: 사용자 인증을 처리하고 로그인 후 메인 페이지로 이동\n\nimport React, { useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { useNavigate } from \"react-router-dom\";\nimport { userState } from \"../atoms/userAtom\";\n\nexport default function LoginPage() {\n  // 사용자 입력 상태\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  // 로그인 메시지 상태 (성공/오류)\n  const [message, setMessage] = useState(\"\");\n\n  // 전역 사용자 상태 관리\n  const [user, setUser] = useRecoilState(userState);\n\n  const navigate = useNavigate();\n\n  // 입력 필드 변경 시 상태 업데이트\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // 로그인 요청 처리\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/api/auth/login`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(formData),\n      });\n\n      const data = await res.json();\n\n      if (res.ok) {\n        // 로그인 성공 시 사용자 정보 설정 및 로컬 스토리지 저장\n        setUser({ id: data.userId, name: data.name });\n        localStorage.setItem(\n          \"user\",\n          JSON.stringify({ id: data.userId, name: data.name })\n        );\n        setMessage(\"✅ 로그인 성공!\");\n        // 일정 시간 후 메인 페이지로 이동\n        setTimeout(() => {\n          navigate(\"/mainpage\");\n        }, 1500);\n      } else {\n        // 로그인 실패 시 메시지 출력\n        setMessage(`❌ 오류: ${data.error}`);\n      }\n    } catch (err) {\n      // 서버 연결 실패\n      setMessage(\"❌ 서버에 연결할 수 없습니다.\");\n    }\n  };\n\n  return (\n    <div className=\"max-w-[700px] mx-auto mt-20 mb-20 p-6 bg-white rounded shadow-md border\">\n      <h2 className=\"text-2xl font-bold mb-4 text-center\">로그인</h2>\n\n      {/* 로그인 폼 */}\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        {/* 아이디 입력 필드 */}\n        <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"아이디\"\n          value={formData.username}\n          onChange={handleChange}\n          required\n          className=\"w-full px-4 py-2 border rounded\"\n        />\n        {/* 비밀번호 입력 필드 */}\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"비밀번호\"\n          value={formData.password}\n          onChange={handleChange}\n          required\n          className=\"w-full px-4 py-2 border rounded\"\n        />\n        {/* 로그인 버튼 */}\n        <button\n          type=\"submit\"\n          className=\"w-full bg-green-500 text-white py-2 rounded hover:bg-green-600\"\n        >\n          로그인\n        </button>\n      </form>\n\n      {/* 로그인 결과 메시지 출력 */}\n      {message && (\n        <p className=\"mt-4 text-center text-sm text-gray-700\">\n          {message}\n        </p>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}